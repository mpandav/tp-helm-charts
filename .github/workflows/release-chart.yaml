name: Release Helm Charts

on:
  push:
    branches:
      - 'main'
      - 'releases/**'
    paths:
      - 'charts/**'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.17.1'

      - name: Add dependency chart repos
        run: |      
          helm repo add tibco-platform https://mpandav.github.io/tp-helm-charts/

      - name: Add third party dependency chart repositories
        run: |
          for dir in $(find charts/ -type f -name 'Chart.yaml' | sed -r 's|/[^/]+$||' | sort | uniq); do
            echo "Adding helm repositories in $dir"
            helm dependency list "$dir" 2>/dev/null | tail -n +2 | head -n -1 | while read -r name version repo _; do
              if [[ -z "$repo" || "$repo" == "file://"* || "$repo" == "unpacked" ]]; then
                echo "📁 Skipping local/vendored dependency: $name (repo=$repo)"
              elif [[ "$repo" =~ ^https?:// ]]; then
                echo "➕ Adding remote repo: $name -> $repo"
                helm repo add "$name" "$repo"
              else
                echo "⚠️ Unknown or missing repo for $name → Skipping: '$repo'"
              fi
            done
          done

      - name: Install chart-releaser (cr)
        run: |
          curl -sSL https://github.com/helm/chart-releaser/releases/download/v1.7.0/chart-releaser_1.7.0_linux_amd64.tar.gz| tar xz
          sudo mv cr /usr/local/bin
          cr version

      - name: Install yq (for parsing Chart.yaml)
        run: |
          sudo wget -q https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version
      - name: Topologically sort charts
        run: |
          bash scripts/toposort.sh > sorted-charts.txt
          cat sorted-charts.txt

      - name: Package and release charts in order
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p .cr-release-packages

          while IFS= read -r chart_dir; do
            name=$(yq -r '.name' "$chart_dir/Chart.yaml")
            version=$(yq -r '.version' "$chart_dir/Chart.yaml")
            tgz_file=".cr-release-packages/${name}-${version}.tgz"

            echo "📦 Packaging $name ($version) from $chart_dir"
            helm package "$chart_dir" --destination .cr-release-packages

            echo "🚀 Releasing $tgz_file to GitHub Releases"
            mkdir -p temp-release
            cp "$tgz_file" temp-release/

            cr upload \
              --package-path temp-release \
              --token "$CR_TOKEN" \
              --owner "${{ github.repository_owner }}" \
              --git-repo "${{ github.event.repository.name }}" \
              --skip-existing

            echo "🔄 Preparing gh-pages worktree for index update"
            git fetch origin gh-pages
            git worktree add gh-pages-worktree origin/gh-pages

            echo "🧭 Running cr index to update index.yaml"
            cr index \
              --package-path temp-release \
              --index-path gh-pages-worktree/index.yaml \
              --owner "${{ github.repository_owner }}" \
              --git-repo "${{ github.event.repository.name }}"

            echo "🚀 Committing and pushing updated index.yaml"
            cd gh-pages-worktree
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add index.yaml
            git commit -m "Update index.yaml with $name-$version"
            git push origin gh-pages
            cd ..
            git worktree remove gh-pages-worktree

            rm -rf temp-release

            echo "🔄 Refreshing Helm repo index for next chart"
            helm repo update
            sleep 5
          done < sorted-charts.txt
